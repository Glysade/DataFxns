id: db2af994-2c2e-c6aa-4495-e4bdce0d8edb
name: Antibody Structure Prediction
description: Predict antibody 3D structure given heavy and light chain sequences.
category: Biopolymer
version: 1.0.0
serviceName: AntibodyStructurePrediction
serviceUri: glysade_mAb.python
executorId: Glysade.CPythonDataFxn
inputFields:
- control:
    id: heavyChain
    label: Select column with heavy chain sequence
    type: columnselect
    multi: !!bool false
    validationRules:
    - type: required
      message: Select column containing heavy chain sequence
    filters:
    - dataType: string
      contentType:
      - chemical/x-sequence
  request:
    id: heavyChain
    dataType: string
    selectorType: column
- control:
    id: lightChain
    label: Select column with light chain sequence
    type: columnselect
    multi: !!bool false
    validationRules:
    - type: required
      message: Select column containing light chain sequence
    filters:
    - dataType: string
      contentType:
      - chemical/x-sequence
  request:
    id: lightChain
    dataType: string
    selectorType: column
- control:
    id: idColumn
    label: ID column
    type: columnselect
    multi: !!bool false
    validationRules:
    - type: required
      message: Specify a column with unique IDs
    filters:
    - dataType: string
      contentType: []
  request:
    id: idColumn
    dataType: string
    selectorType: column
- control:
    id: outputDirectory
    label: Output directory
    type: file
    fileTypes:
    - extension: .smi
      contentType: chemical/x-smiles
      name: SMILES (*.smi)
    - extension: .sdf
      contentType: chemical/x-mdl-sdfile
      name: SD file (*.sdf)
    - extension: .mol
      contentType: chemical/x-mdl-molfile
      name: MOL file (*.mol)
    - extension: .pdb
      contentType: chemical/x-pdb
      name: Protein Data Bank (*.pdb)
    mode: path
    pathType: folder
    validationRules:
    - type: required
      message: Specify an output directory for the predicted structures
  request:
    id: outputDirectory
    dataType: string
tags:
- color: '#dddddd'
  text: MAB
- color: '#D22A2A'
  text: structure
updateBehavior: automatic
maximumOutputColumns: !!int 1
maximumOutputTables: !!int 0
chemistryFunction: !!bool false
allowedClients:
- Analyst
- WebPlayer
demoUrl: 
limitBy: none
minimumChartsVersion: 
confirmSubmit: 
ironPython: |
  ####################################################
  #  Copyright 2023 Glysade LLC, All Rights Reserved #
  ####################################################

  import sys,clr
  from Spotfire.Dxp.Data import DataTable, DataManager
  from Spotfire.Dxp.Application import PanelTypeIdentifiers
  from Spotfire.Dxp.Application import Panel
  import Spotfire.Dxp.Application.PanelCollection

  from System import AppDomain
  for asm in AppDomain.CurrentDomain.GetAssemblies():
      if asm.GetName().Name == 'Charts':
          clr.AddReference(asm.FullName)

  from Charts import ChartsModel
  model_type = ChartsModel

  #tableId pass in args
  dataTable = InputTables[0]

  if not dataTable:
      raise Exception('target table not found')

  page = Document.Pages.AddNew('Antibody Structure Prediction Results')
  panelsToHide = [PanelTypeIdentifiers.DataPanel, PanelTypeIdentifiers.DetailsOnDemandPanel]

  for panel in page.Panels:
      if panel.TypeId in panelsToHide:
          if panel.Visible:
              panel.Visible = False

  filteringScheme = Document.FilteringSchemes[0]
  page.FilterPanel.FilteringSchemeReference = filteringScheme

  tableVis = page.Visuals.AddNew[model_type]()
  tableVis.SetKeyValue('visualization','table-visualization')
  tableVis.DataTable = dataTable
  tableVis.ConfigureColumns()
  tableVis.Marking = Document.Data.Markings.DefaultMarkingReference
  
  threeDVis = page.Visuals.AddNew[model_type]()
  threeDVis.SetKeyValue('visualization','biomolviewer-visualization')
  threeDVis.DataTable = dataTable
  threeDVis.ConfigureColumns()
  threeDVis.Marking = Document.Data.Markings.DefaultMarkingReference

  tableVis.SetActiveVisual()
  page.AutoConfigure()

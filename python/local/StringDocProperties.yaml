id: a57e4f92-1124-05f3-c4c6-060c9dfd16bf
name: String Document Properties
description: Extracts string document properties and puts them in a new table
category: Demo
version: 1.0.0
serviceName: Script
serviceUri: glysade.python
executorId: Glysade.CPythonDataFxn
inputFields:
  - control:
      id: structureColumn
      label: Select structure column
      type: columnselect
      filters:
        - dataType: string
          contentType:
            - chemical/x-mdl-molfile
            - chemical/x-mdl-molfile-v3000
            - chemical/x-smiles
            - chemical/x-daylight-smiles
        - dataType: binary
          contentType:
            - chemical/x-mdl-molfile
            - chemical/x-mdl-molfile-v3000
      validationRules:
        - type: required
          message: Must select column of 2D structures
    request:
      id: structureColumn
      dataType: string
      selectorType: column
tags:
updateBehavior: automatic
maximumOutputColumns: !!int 0
maximumOutputTables: !!int 1
chemistryFunction: !!bool false
script: |
  from df.data_transfer import DataFunctionRequest, DataFunctionResponse, DataType, ColumnData, \
      TableData

  def execute(request: DataFunctionRequest) -> DataFunctionResponse:
      input_properties = request.documentProperties
      string_properties = [(p.name, p.value) for p in input_properties if p.dataType == DataType.STRING]
      names, values = tuple(zip(*string_properties))
      columns = [ColumnData(name='Property Name', dataType=DataType.STRING, values=list(names)),
                ColumnData(name='Property Value', dataType=DataType.STRING, values=list(values))]
      response = DataFunctionResponse(outputTables=[TableData(tableName='StringDocProperties', columns=columns)])
      return response
outputFields:
allowedClients:
- Analyst
- WebPlayer
demoUrl: 
limitBy: none
minimumChartsVersion: 
confirmSubmit: 
